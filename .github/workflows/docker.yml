name: Docker Build & Release

on:
  push:
    branches: [ main, master ]
    paths-ignore: [ 'docs/**', '*.md' ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]   # 仅在 GitHub Release 发布时触发

env:
  IMAGE_NAME: tgszy/strm-helper   # 你的 DockerHub 仓库

jobs:
  test-build:
    runs-on: ubuntu-latest
    if: github.event_name != 'release'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3      # Buildx 构建器
      
      # 测试构建（不推送）
      - name: Test Docker build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          tags: ${{ env.IMAGE_NAME }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3        # 多架构虚拟化
      - uses: docker/setup-buildx-action@v3      # Buildx 构建器
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 生成标签（version / major.minor / latest）
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      # 构建并推送（含缓存加速）
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64  # 按需保留
          push: true
          tags: ${{ steps.meta.outputs.tags }}   # ★ 修复：必须存在
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
